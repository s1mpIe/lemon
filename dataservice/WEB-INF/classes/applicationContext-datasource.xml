<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd "> 
    
    <!-- 配置数据源，阿里巴巴Druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		<property name="url" value="${p2p.datasource.url}" />
		<property name="driverClassName" value="${p2p.datasource.driver}"/>
		<property name="username" value="${p2p.datasource.username}" />
		<property name="password" value="${p2p.datasource.password}" />
		<property name="filters" value="stat" />
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="20" />
 	</bean>
	
	<!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"> 
		<property name="url" value="${p2p.datasource.url}" />
		<property name="driverClassName" value="${p2p.datasource.driver}"/>
		<property name="username" value="${p2p.datasource.username}" />
		<property name="password" value="${p2p.datasource.password}" />
 	</bean> -->
		
	<!-- MyBatis sqlSessionFactory 配置 mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bjpowernode.p2p.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	 <!-- 事务相关控制 -->       
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	   <property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
    
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		   <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		   <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		   <tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		   <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		   <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- Service层事务控制 -->
	<aop:config>
		<aop:pointcut id="pointcut" expression="execution(* com.bjpowernode.p2p.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="pointcut" advice-ref="txAdvice" />
	</aop:config>                                
</beans>